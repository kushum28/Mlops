# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - src
      - .pipelines/template/template-model-download.yml
resources:
- repo: self
parameters:
  - name: containerRegistry
    type: string
    default: 'kushmlcontainer'
  - name: dockerFilePath
    type: string
    default: Dockerfile
  - name: imageRepository
    type: string
    default: 'anomaly'
  - name: protoVersion
    type: string
    default: none
  - name: servicePrincipalId
    type: string
    default: '972124e4-73b0-419c-8b53-510f4b7f8e43'
  - name: servicePrincipalSecret
    type: string
    default: 'pp48Q~DkqzoYXyisucZC-wqj8Jvslp1oxUR-zcS-'
  - name: tenantId
    type: string
    default: '72f988bf-86f1-41af-91ab-2d7cd011db47'
  - name: workingDirectory
    type: string
    default: 'src/docker'
  - name: dockerArguments
    type: string
    default: '--build-arg PYTHON_VERSION=3.8'
  - name: modelName
    type: string
    default: 'anomaly_model'
variables:
  - name: workingDirectoryScripts
    value: '$(Build.SourcesDirectory)/scripts'
  - name: workingDirectoryInferencing
    value: '$(Build.SourcesDirectory)'
  - name: mlModelArtifact
    value: 'ml-model-files'



stages:
  - stage: dev
    displayName: 'Model download'
    jobs:
      - template: template/template-model-download.yml
        parameters:
          artifactName: $(mlModelArtifact)
          containerRegistry: ${{ parameters.containerRegistry }}
          datasetConfig: ''
          modelLabel: ''
          modelName: ${{ parameters.modelName }}
          resourceGroupName: 'kush-res-grp'
          servicePrincipalId: ${{ parameters.servicePrincipalId }}
          servicePrincipalSecret: ${{ parameters.servicePrincipalSecret }}
          source: 'testrun'
          tenantId: ${{ parameters.tenantId }}
          workingDir: $(workingDirectoryScripts)
          workingDirInferencing: $(workingDirectoryInferencing)
          workspaceName: 'MLTest'
          imageType: 'testimage'
