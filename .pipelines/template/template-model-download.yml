parameters:
  - name: amlModelBuildId
    type: string
    default: ''
  - name: artifactName
    type: string
  - name: modelName
    type: string
  - name: resourceGroupName
    type: string
  - name: servicePrincipalId
    type: string
  - name: servicePrincipalSecret
    type: string
  - name: tenantId
    type: string
  - name: trainedModelDir
    type: string
    default: 'trained_model'
  - name: workingDir
    type: string
  - name: workingDirInferencing
    type: string
  - name: workspaceName
    type: string

steps:
  - bash: |
      
      az extension add -n azure-cli-ml
      echo "Login using service principal ${{ parameters.servicePrincipalId }}"
      az login --service-principal -u ${{ parameters.servicePrincipalId }} -p=$SP_SECRET --tenant ${{ parameters.tenantId }}

      mkdir -p ${{ parameters.trainedModelDir }}/${{ parameters.modelName }}

      modelHeaderCommand="az ml model list  --model-name ${{ parameters.modelName }} --resource-group ${{ parameters.resourceGroupName }} --workspace-name ${{ parameters.workspaceName }}  $properties --latest --query '[0]' -o json"
      echo "Command to retrieve model header: $modelHeaderCommand"

      modelHeader=$(eval $modelHeaderCommand)
       if [ -z "$modelHeader" ]
       then
         echo "Model header not found!"
         return
       fi


      model_id=$(echo $modelHeader | jq -r .id)

      echo Model Id found: $model_id

      az ml model download --model-id $model_id \
        --target-dir ${{ parameters.workingDirInferencing }} \
        --resource-group ${{ parameters.resourceGroupName }} \
        --workspace-name ${{ parameters.workspaceName }} \
        --overwrite

      echo Here are the downloaded model files in ${{ parameters.trainedModelDir }}/${{ parameters.modelName }}
      ls -a ${{ parameters.trainedModelDir }}/${{ parameters.modelName }}
    workingDirectory: ${{ parameters.workingDir }}
    displayName: 'Download Azure ML model'
    env:
      SP_SECRET: ${{ parameters.servicePrincipalSecret }}

  - script: |
     # mv ${{ parameters.workingDir }}/${{ parameters.trainedModelDir }}/${{ parameters.modelName }}/* ${{ parameters.workingDirInferencing }}/recommendation/lib
    displayName: Move ML Model files
    workingDirectory: ${{ parameters.workingDir }}

  - publish: ${{ parameters.workingDirInferencing }}
    artifact: ${{ parameters.artifactName }}
