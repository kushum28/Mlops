parameters:
  - name: amlModelBuildId
    type: string
    default: ''
  - name: artifactName
    type: string
  - name: datasetConfig
    type: string
  - name: modelLabel
    type: string
  - name: modelName
    type: string
  - name: resourceGroupName
    type: string
  - name: servicePrincipalId
    type: string
    default: '972124e4-73b0-419c-8b53-510f4b7f8e43'
  - name: servicePrincipalSecret
    type: string
    default: 'pp48Q~DkqzoYXyisucZC-wqj8Jvslp1oxUR-zcS-'
  - name: source
    type: string
    default: 'testrun'
  - name: tenantId
    type: string
    default: '72f988bf-86f1-41af-91ab-2d7cd011db47'
  - name: trainedModelDir
    type: string
    default: 'anomaly_model'
  - name: workingDir
    type: string
  - name: workingDirInferencing
    type: string
  - name: workspaceName
    type: string

steps:
  - bash: |
      echo "Login using service principal ${{ parameters.servicePrincipalId }}"
      az login --service-principal -u ${{ parameters.servicePrincipalId }} -p=$SP_SECRET --tenant ${{ parameters.tenantId }}

      mkdir -p ${{ parameters.trainedModelDir }}

      labelName=''
      if ! [ -z "${{ parameters.modelLabel }}" ]
      then
        labelName=$(bash prepare_model_label.sh -l ${{ parameters.modelLabel }} -f ${{ parameters.datasetConfig }})
        echo "Label created: " $labelName
      fi

      source get_model_details.sh \
        modelName=${{ parameters.modelName }} \
        resourceGroupName=${{ parameters.resourceGroupName }} \
        workspaceName=${{ parameters.workspaceName }} \
        source=${{ parameters.source }} \
        buildId=${{ parameters.amlModelBuildId }} \
        label=$labelName

      model_id=$(echo $modelDetails | jq -r .id)

      echo Model Id found: $model_id

      echo "##vso[task.setvariable variable=modelId]$model_id"

      echo "Writing Model Version to the file -> ${{ parameters.workingDirInferencing }}/model_version.yml"
      echo "model_version: $model_id" > ${{ parameters.workingDirInferencing }}/model_version.yml

      az ml model download --model-id $model_id \
        --target-dir ${{ parameters.trainedModelDir }} \
        --resource-group ${{ parameters.resourceGroupName }} \
        --workspace-name ${{ parameters.workspaceName }} \
        --overwrite

      echo Here are the downloaded model files in ${{ parameters.trainedModelDir }}/${{ parameters.modelName }}
      ls -a ${{ parameters.trainedModelDir }}/${{ parameters.modelName }}
    workingDirectory: ${{ parameters.workingDir }}
    displayName: 'Download Azure ML model'
    env:
      SP_SECRET: ${{ parameters.servicePrincipalSecret }}

  - script: |
      mv ${{ parameters.workingDir }}/${{ parameters.trainedModelDir }}/${{ parameters.modelName }}/* ${{ parameters.workingDirInferencing }}/recommendation/lib
    displayName: Move ML Model files
    workingDirectory: ${{ parameters.workingDir }}

  - publish: ${{ parameters.workingDirInferencing }}
    artifact: ${{ parameters.artifactName }}
